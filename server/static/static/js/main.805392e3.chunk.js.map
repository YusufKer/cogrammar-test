{"version":3,"sources":["components/Login.js","components/Register.js","components/Dashboard.js","App.js","index.js"],"names":["Login","emailRef","useRef","passwordRef","history","useHistory","formSubmit","e","a","preventDefault","fetch","method","headers","body","JSON","stringify","email","current","value","password","response","json","data","user","alert","localStorage","setItem","replace","onSubmit","type","placeholder","ref","to","Register","usernameRef","confirmPasswordRef","username","console","log","Dashboard","useState","bio","setBio","bioRef","getItem","req","status","error","useEffect","token","jwt","decode","populateQuote","removeItem","className","App","path","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2bAGe,SAASA,IACpB,IAAMC,EAAWC,mBACXC,EAAcD,mBACdE,EAAUC,cACVC,EAAU,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACjBD,EAAEE,iBADe,SAEMC,MAAM,aAAa,CACxCC,OAAQ,OACRC,QAAQ,CACN,eAAe,oBAEjBC,KAAMC,KAAKC,UAAU,CACnBC,MAAMf,EAASgB,QAAQC,MACvBC,SAAShB,EAAYc,QAAQC,UAThB,cAEXE,EAFW,gBAYEA,EAASC,OAZX,QAYXC,EAZW,QAaTC,MACNC,MAAM,oBACNC,aAAaC,QAAQ,QAAQJ,EAAKC,MAClCnB,EAAQuB,QAAQ,eAEhBH,MAAM,wBAlBS,2CAAH,sDAqBhB,OACI,gCACI,uCACA,uBAAMI,SAAUtB,EAAhB,UACA,uBACIuB,KAAK,QACLC,YAAY,QACZC,IAAK9B,IACP,uBACF,uBACI4B,KAAK,WACLC,YAAY,WACZC,IAAK5B,IACP,uBACF,wBAAQ0B,KAAK,SAAb,uBAEA,cAAC,IAAD,CAAMG,GAAG,YAAT,yBC1CG,SAASC,IACpB,IAAMC,EAAchC,mBACdD,EAAWC,mBACXC,EAAcD,mBACdiC,EAAqBjC,mBACrBI,EAAU,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACjBD,EAAEE,iBADe,SAEMC,MAAM,gBAAgB,CAC3CC,OAAQ,OACRC,QAAQ,CACN,eAAe,oBAEjBC,KAAMC,KAAKC,UAAU,CACnBqB,SAASF,EAAYjB,QAAQC,MAC7BF,MAAMf,EAASgB,QAAQC,MACvBC,SAAShB,EAAYc,QAAQC,UAVhB,cAEXE,EAFW,gBAaEA,EAASC,OAbX,OAaXC,EAbW,OAcjBe,QAAQC,IAAIhB,GAdK,2CAAH,sDAgBhB,OACI,gCACI,0CACA,uBAAMM,SAAUtB,EAAhB,UACA,uBACIuB,KAAK,OACLC,YAAY,WACZC,IAAKG,IACP,uBACF,uBACIL,KAAK,QACLC,YAAY,QACZC,IAAK9B,IACP,uBACF,uBACI4B,KAAK,WACLC,YAAY,WACZC,IAAK5B,IACP,uBACF,uBACI0B,KAAK,WACLC,YAAY,mBACZC,IAAKI,IACP,uBACF,wBAAQN,KAAK,SAAb,uBAEA,cAAC,IAAD,CAAMG,GAAG,SAAT,sB,+BC7CG,SAASO,IACpB,IAAMnC,EAAUC,cAChB,EAAsBmC,qBAAtB,mBAAOC,EAAP,KAAYC,EAAZ,KACMC,EAASzC,mBAHgB,4CAI/B,8BAAAM,EAAA,sEACsBE,MAAM,gCAAgC,CACpDE,QAAQ,CACJ,iBAAkBa,aAAamB,QAAQ,YAHnD,cACUC,EADV,gBAMuBA,EAAIxB,OAN3B,OAOuB,QADbC,EANV,QAOYwB,OACJJ,EAAOpB,EAAKC,KAAKkB,KAEjBjB,MAAMF,EAAKyB,OAVnB,4CAJ+B,sBAoB/B,IAAMzC,EAAU,uCAAG,WAAMC,GAAN,iBAAAC,EAAA,6DACfD,EAAEE,iBADa,SAEGC,MAAM,gCAAgC,CACpDC,OAAQ,OACRC,QAAQ,CACJ,eAAe,mBACf,iBAAkBa,aAAamB,QAAQ,UAE3C/B,KAAKC,KAAKC,UAAU,CAChB0B,IAAIE,EAAO1B,QAAQC,UATZ,cAET2B,EAFS,gBAYIA,EAAIxB,OAZR,OAYTC,EAZS,OAafoB,EAAOpB,EAAKC,KAAKkB,KAbF,2CAAH,sDA8BhB,OAdAO,qBAAU,WACN,IAAMC,EAAQxB,aAAamB,QAAQ,SACnC,GAAGK,EAAM,CACL,IAAM1B,EAAO2B,IAAIC,OAAOF,GACxBZ,QAAQC,IAAIf,GACRA,EAzCmB,mCA6CnB6B,IAHA3B,aAAa4B,WAAW,SACxBjD,EAAQuB,QAAQ,cAK1B,IAGE,sBAAK2B,UAAU,YAAf,kBACUb,GAAOA,EACb,uBAAMb,SAAUtB,EAAhB,UACI,uBAAOuB,KAAK,OAAOC,YAAY,MAAMC,IAAKY,IAC1C,wBAAQd,KAAK,SAAb,0B,OC7BD0B,MAnBf,WAEE,OACE,qBAAKD,UAAU,MAAf,SACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOE,KAAK,SAAZ,SACE,cAACxD,EAAD,MAEF,cAAC,IAAD,CAAOwD,KAAK,YAAZ,SACE,cAACvB,EAAD,MAEF,cAAC,IAAD,CAAOuB,KAAK,aAAZ,SACE,cAACjB,EAAD,YClBVkB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.805392e3.chunk.js","sourcesContent":["import {useRef} from \"react\";\nimport {Link, useHistory} from \"react-router-dom\";\n\nexport default function Login(){\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const history = useHistory();\n    const formSubmit = async e =>{\n      e.preventDefault();\n      const response = await fetch(\"/api/login\",{\n        method: \"POST\",\n        headers:{\n          \"Content-Type\":\"application/json\"\n        },\n        body: JSON.stringify({\n          email:emailRef.current.value,\n          password:passwordRef.current.value\n        })\n      })\n      const data = await response.json()\n      if(data.user){\n        alert(\"Login Successful\");\n        localStorage.setItem(\"token\",data.user);\n        history.replace(\"/dashboard\");\n      }else{\n        alert(\"Please check details\");\n      }\n    }\n    return(\n        <div>\n            <h2>Login</h2>\n            <form onSubmit={formSubmit}>\n            <input\n                type=\"email\"\n                placeholder=\"Email\"\n                ref={emailRef}\n            /><br/>\n            <input\n                type=\"password\"\n                placeholder=\"Password\"\n                ref={passwordRef}\n            /><br/>\n            <button type=\"submit\">Submit</button>\n            </form>\n            <Link to=\"/register\">Register</Link>\n        </div>\n    )\n}\n","import {useRef} from \"react\";\nimport {Link} from \"react-router-dom\";\nexport default function Register(){\n    const usernameRef = useRef();\n    const emailRef = useRef();\n    const passwordRef = useRef();\n    const confirmPasswordRef = useRef();\n    const formSubmit = async e =>{\n      e.preventDefault();\n      const response = await fetch(\"/api/register\",{\n        method: \"POST\",\n        headers:{\n          \"Content-Type\":\"application/json\"\n        },\n        body: JSON.stringify({\n          username:usernameRef.current.value,\n          email:emailRef.current.value,\n          password:passwordRef.current.value\n        })\n      })\n      const data = await response.json()\n      console.log(data);\n    }\n    return(\n        <div>\n            <h2>Register</h2>\n            <form onSubmit={formSubmit}>\n            <input\n                type=\"text\"\n                placeholder=\"Username\"\n                ref={usernameRef}\n            /><br/>\n            <input\n                type=\"email\"\n                placeholder=\"Email\"\n                ref={emailRef}\n            /><br/>\n            <input\n                type=\"password\"\n                placeholder=\"Password\"\n                ref={passwordRef}\n            /><br/>\n            <input\n                type=\"password\"\n                placeholder=\"Confirm Password\"\n                ref={confirmPasswordRef}\n            /><br/>\n            <button type=\"submit\">Submit</button>\n            </form>\n            <Link to=\"/login\">Login</Link>\n        </div>\n    )\n}\n","import {useEffect, useState, useRef} from \"react\";\nimport jwt from \"jsonwebtoken\";\nimport {useHistory} from \"react-router-dom\";\n\nexport default function Dashboard(){\n    const history = useHistory();\n    const [bio, setBio] = useState();\n    const bioRef = useRef();\n    async function populateQuote(){\n        const req = await fetch(\"http://localhost:5000/api/bio\",{\n            headers:{\n                \"x-access-token\": localStorage.getItem(\"token\")\n            }\n        })\n        const data = await req.json();\n        if(data.status === \"ok\"){\n            setBio(data.user.bio);        \n        }else{\n            alert(data.error)\n        }\n    }\n//hostname:ubuntu-s-1vcpu-1gb-fra1-01\n//ip address:165.232.116.41\n//password:!v+g%L_Vvv3Y9QH\n    const formSubmit = async e =>{\n        e.preventDefault();\n        const req = await fetch(\"http://localhost:5000/api/bio\",{\n            method: \"POST\",\n            headers:{\n                \"Content-Type\":\"application/json\",\n                'x-access-token': localStorage.getItem(\"token\")\n            },\n            body:JSON.stringify({\n                bio:bioRef.current.value\n            })\n        })\n        const data = await req.json();\n        setBio(data.user.bio)\n    }\n\n    useEffect(()=>{\n        const token = localStorage.getItem(\"token\");\n        if(token){\n            const user = jwt.decode(token);\n            console.log(user);\n            if(!user){\n                localStorage.removeItem(\"token\");\n                history.replace(\"/login\");\n            }else{\n                populateQuote();\n            }\n        }\n    },[])\n\n    return(\n        <div className=\"dashboard\">\n            Bio: {bio && bio}\n            <form onSubmit={formSubmit}>\n                <input type=\"text\" placeholder=\"bio\" ref={bioRef}/>\n                <button type=\"submit\">Submit</button>    \n            </form>\n        </div>\n    )\n}","import {\n  BrowserRouter as Router,\n  Route\n} from \"react-router-dom\";\n\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport Dashboard from \"./components/Dashboard\";\n\nimport './App.css';\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Route path=\"/login\">\n          <Login/>\n        </Route>\n        <Route path=\"/register\">\n          <Register/>\n        </Route>\n        <Route path=\"/dashboard\">\n          <Dashboard/>\n        </Route>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}